services:
  # Development services
  app:
    environment:
      - runmode=${TARGET:-production}
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '${API_SERVER_PUBLIC_PORT:-8080}:8080'
      - '${INSIGHTS_SERVER_PUBLIC_PORT:-8081}:8081'
      - '${WEB_SERVER_PUBLIC_PORT:-8082}:8082'
    privileged: true
    networks:
      - web
  postgres:
    image: postgres:16.3
    ports:
      - '${DATABASE_PORT:-8090}:5432'
    environment:
      POSTGRES_USER: ${DATABASE_USER:-postgres}
      POSTGRES_DB: ${DATABASE_NAME:-serverpod}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-UweULCRTJomxoaKbqJr541Ri_EmTmaH_}
    volumes:
      - aida_data:/var/lib/postgresql/data
    profiles:
      - '' # Default profile
      - dev

    networks:
      - web
  # redis:
  #   image: redis:6.2.6
  #   ports:
  #     - '28091:6379'
  #   command: redis-server --requirepass "2tmrsjUsRP--qH2UKanUHTOXg-2D1Xha"
  #   environment:
  #     - REDIS_REPLICATION_MODE=master
  #   profiles:
  #     - '' # Default profile
  #     - dev

  #   networks:
  #     - web
  # Test services
  # postgres_test:
  #   image: postgres:16.3
  #   ports:
  #     - '9090:5432'
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_DB: aida_test
  #     POSTGRES_PASSWORD: "2C_96FaQC7OdgbYTmZwqy94x-INQn0KK"
  #   volumes:
  #     - aida_test_data:/var/lib/postgresql/data
  #   profiles:
  #     - '' # Default profile
  #     - test

  #   networks:
  #     - web
  # redis_test:
  #   image: redis:6.2.6
  #   ports:
  #     - '9091:6379'
  #   command: redis-server --requirepass "L19b1BvG67MPPxk66eyYLDF_k0zyfhci"
  #   environment:
  #     - REDIS_REPLICATION_MODE=master
  #   profiles:
  #     - '' # Default profile
  #     - test

volumes:
  aida_data:
  # aida_test_data:

networks:
  web:
    driver: bridge
    